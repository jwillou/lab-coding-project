#setup
setwd("/Users/jannawilloughby/GDrive/Willoughby lab/summer coding project/lab-coding-project/")   #set working directory
directory = getwd()
outdir    = paste(directory,"/output/",sep="")                                                    #directory to save model output
source(paste(directory, "/source/FunctionSourcer.R", sep = ''))                                   #source functions and set source directory
setwd("/Users/jannawilloughby/GDrive/Willoughby lab/summer coding project/lab-coding-project/")   #set working directory
directory = getwd()
outdir    = paste(directory,"/output/",sep="")                                                    #directory to save model output
source(paste(directory, "/source/FunctionSourcer.R", sep = ''))                                   #source functions and set source directory
#Simulation parameters
lifespan    = 3     #max number of years an individual can live
years       = 50    #number of years to run each replicate/simulated population
K           = 100
fecundity   = 1
maturity    = 1
prop.female = 0.5
replicates = expand.grid(lifespan, years, K, fecundity, maturity, prop.female)
View(replicates)
replicates
colnames(replicates) = c("lifespan", "years", "K", "fecundity", "maturity", "prop.female")
#run model iterating over parameters in replicates
for(r in 1:nrow(replicates)){
RunModel(replicates, r)
}
source(paste(directory, "/source/FunctionSourcer.R", sep = ''))                                   #source functions and set source directory
#run model iterating over parameters in replicates
for(r in 1:nrow(replicates)){
RunModel(replicates, r)
}
#setup
setwd("/Users/jannawilloughby/GDrive/Willoughby lab/summer coding project/lab-coding-project/")   #set working directory
directory = getwd()
outdir    = paste(directory,"/output/",sep="")                                                    #directory to save model output
source(paste(directory, "/source/FunctionSourcer.R", sep = ''))                                   #source functions and set source directory
#setup
setwd("/Users/jannawilloughby/GDrive/Willoughby lab/summer coding project/lab-coding-project/")   #set working directory
directory = getwd()
outdir    = paste(directory,"/output/",sep="")                                                    #directory to save model output
source(paste(directory, "/source/FunctionSourcer.R", sep = ''))                                   #source functions and set source directory
#simulation parameters
lifespan    = 3     #max number of years an individual can live
years       = 50    #number of years to run each replicate/simulated population
K           = 100
fecundity   = 1
maturity    = 1
source(paste(directory, "/source/FunctionSourcer.R", sep = ''))                                   #source functions and set source directory
#simulation parameters
lifespan    = 3     #max number of years an individual can live
years       = 50    #number of years to run each replicate/simulated population
K           = 100
fecundity   = 1
maturity    = 1
prop.female = 0.5
#generate list of combinations of parameter values to simulate
replicates = expand.grid(lifespan, years, K, fecundity, maturity, prop.female)
colnames(replicates) = c("lifespan", "years", "K", "fecundity", "maturity", "prop.female")
#run model iterating over parameters in replicates
for(r in 1:nrow(replicates)){
RunModel(replicates, r)
}
write.table(pop, "testpop.txt", sep="\t", col. names=F, row.names=F)
#setup
setwd("/Users/jannawilloughby/GDrive/Willoughby lab/summer coding project/lab-coding-project/")   #set working directory
directory = getwd()
outdir    = paste(directory,"/output/",sep="")                                                    #directory to save model output
source(paste(directory, "/source/FunctionSourcer.R", sep = ''))                                   #source functions and set source directory
#simulation parameters
lifespan    = 3     #max number of years an individual can live
years       = 50    #number of years to run each replicate/simulated population
K           = 100
fecundity   = 1
maturity    = 1
prop.female = 0.5
#generate list of combinations of parameter values to simulate
replicates = expand.grid(lifespan, years, K, fecundity, maturity, prop.female)
colnames(replicates) = c("lifespan", "years", "K", "fecundity", "maturity", "prop.female")
#run model iterating over parameters in replicates
for(r in 1:nrow(replicates)){
RunModel(replicates, r)
}
write.table(pop, "output/testpop.txt", sep="\t", col.names=F, row.names=F)
#setup
setwd("/Users/jannawilloughby/GDrive/Willoughby lab/summer coding project/lab-coding-project/")   #set working directory
directory = getwd()
outdir    = paste(directory,"/output/",sep="")                                                    #directory to save model output
source(paste(directory, "/source/FunctionSourcer.R", sep = ''))                                   #source functions and set source directory
#simulation parameters
lifespan    = 3     #max number of years an individual can live
years       = 50    #number of years to run each replicate/simulated population
K           = 100
fecundity   = 1
maturity    = 1
prop.female = 0.5
#generate list of combinations of parameter values to simulate
replicates = expand.grid(lifespan, years, K, fecundity, maturity, prop.female)
colnames(replicates) = c("lifespan", "years", "K", "fecundity", "maturity", "prop.female")
#run model iterating over parameters in replicates
for(r in 1:nrow(replicates)){
RunModel(replicates, r)
}
#setup
setwd("/Users/jannawilloughby/GDrive/Willoughby lab/summer coding project/lab-coding-project/")   #set working directory
directory = getwd()
outdir    = paste(directory,"/output/",sep="")                                                    #directory to save model output
source(paste(directory, "/source/FunctionSourcer.R", sep = ''))                                   #source functions and set source directory
#simulation parameters
lifespan    = 3     #max number of years an individual can live
years       = 50    #number of years to run each replicate/simulated population
K           = 100
fecundity   = 1
maturity    = 1
prop.female = 0.5
#generate list of combinations of parameter values to simulate
replicates = expand.grid(lifespan, years, K, fecundity, maturity, prop.female)
colnames(replicates) = c("lifespan", "years", "K", "fecundity", "maturity", "prop.female")
#run model iterating over parameters in replicates
for(r in 1:nrow(replicates)){
RunModel(replicates, r, directory)
}
write.table(pop, paste(directory, "output/testpop.txt", sep=""), sep="\t", col.names=F, row.names=F)
#setup
setwd("/Users/jannawilloughby/GDrive/Willoughby lab/summer coding project/lab-coding-project/")   #set working directory
directory = getwd()
outdir    = paste(directory,"/output/",sep="")                                                    #directory to save model output
source(paste(directory, "/source/FunctionSourcer.R", sep = ''))                                   #source functions and set source directory
#simulation parameters
lifespan    = 3     #max number of years an individual can live
years       = 50    #number of years to run each replicate/simulated population
K           = 100
fecundity   = 1
maturity    = 1
prop.female = 0.5
#generate list of combinations of parameter values to simulate
replicates = expand.grid(lifespan, years, K, fecundity, maturity, prop.female)
colnames(replicates) = c("lifespan", "years", "K", "fecundity", "maturity", "prop.female")
#run model iterating over parameters in replicates
for(r in 1:nrow(replicates)){
RunModel(replicates, r, directory)
}
r=1
lifespan    = replicates$lifespan[r]
years       = replicates$years[r]
K           = replicates$K[r]
fecundity   = replicates$fecundity[r]
maturity    = replicates$maturity[r]
prop.female = replicates$prop.female[r]
#initialize population
pop = matrix(nrow=K, ncol=5)
colnames(pop) = c("id", "momid", "dadid", "age", "sex")
pop[ ,1]   = seq(1,100,1)                                 #ID
pop[ ,2:3] = 0                                            #momid, dadid
pop[ ,4]   = sample(seq(0,lifespan,1), K, replace=T) - 1  #age (minus 1 to help with loop below)
pop[ ,5]   = sample(c(0,1), K, replace=T)                 #sex
#Create a simple loop that removes variable number of individuals each year and runs for 50 years
for(y in 1:years){
dead = sample(seq(1,nrow(pop), 1), 1, replace=F)
pop  = pop[-dead,]
}
write.table(pop, paste(directory, "output/testpop.txt", sep=""), sep="\t", col.names=F, row.names=F)
paste(directory, "output/testpop.txt", sep="")
#setup
setwd("/Users/jannawilloughby/GDrive/Willoughby lab/summer coding project/lab-coding-project/")   #set working directory
directory = getwd()
outdir    = paste(directory,"/output/",sep="")                                                    #directory to save model output
source(paste(directory, "/source/FunctionSourcer.R", sep = ''))                                   #source functions and set source directory
#simulation parameters
lifespan    = 3     #max number of years an individual can live
years       = 50    #number of years to run each replicate/simulated population
K           = 100
fecundity   = 1
maturity    = 1
prop.female = 0.5
#generate list of combinations of parameter values to simulate
replicates = expand.grid(lifespan, years, K, fecundity, maturity, prop.female)
colnames(replicates) = c("lifespan", "years", "K", "fecundity", "maturity", "prop.female")
#run model iterating over parameters in replicates
for(r in 1:nrow(replicates)){
RunModel(replicates, r, directory)
}
#initialize population
pop = matrix(nrow=K, ncol=5)
colnames(pop) = c("id", "momid", "dadid", "age", "sex")
pop[ ,1]   = seq(1,100,1)                                 #ID
pop[ ,2:3] = 0                                            #momid, dadid
pop[ ,4]   = sample(seq(0,lifespan,1), K, replace=T) - 1  #age (minus 1 to help with loop below)
pop[ ,5]   = sample(c(0,1), K, replace=T)                 #sex
#Create a simple loop that removes variable number of individuals each year and runs for 50 years
for(y in 1:years){
dead = sample(seq(1,nrow(pop), 1), 1, replace=F)
pop  = pop[-dead,]
}
pop
write.table(pop, paste(directory, "/output/testpop.txt", sep=""), sep="\t", col.names=F, row.names=F)
write.table(pop, paste(directory, "/output/testpop.txt", sep=""), sep="\t", col.names=F, row.names=F)
View(pop)
a=100
b=200
Add = function(x1, x2){
temp = x1 + x2
return(temp)
}
Add(a,b)
